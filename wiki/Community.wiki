#summary How our community works (with information for newcomers)

<wiki:toc max_depth="2" />

= About =

Our community is a benevolent dictatorship, meaning that our project leader has the final say on all major decisions, but will always act in everyone's best interest.

This project is very forkable, so should the vast majority of the important developers on our team disagree with our leader consistently, then they would create a new [http://en.wikipedia.org/wiki/Fork_(software_development) fork] project, for which they will elect a new leader. Because of this, it is in our leader's best interest to go in the direction of the majority.

Once our project expands and becomes very large, we will operate under a consensus based democracy based on voting. This is not necessary for the time being however.

We do not currently have a traditional style website because our immediate goal is to simply fix Synergy, and not replace it. We hope that once we establish contact with the original creators, we can merge the two projects and so use the name Synergy. At this point we will formally promote the project.

== People ==

Please see the [Members] page for information and contact details of key people.
 
= Communication =

Our most active communication channel is our [http://groups.google.com/group/synergy-plus discussion group]; both users and developers should post questions there. We also have an IRC channel for quick questions, but this should not be used for in-depth discussion.

  * Community portal: http://code.google.com/p/synergy-plus/
  * Discussion group: http://groups.google.com/group/synergy-plus
  * IRC channel: #synergy-plus on irc.freenode.net:8001

= Newcomers =

Developers who are new to our project, should start by checking out the [http://code.google.com/p/synergy-plus/issues/list issues list]; fixing minor bugs is a good way to get familiar with the code.

Before asking questions on the [http://groups.google.com/group/synergy-plus mailing list] it is often best to _search_ the mailing list before hand to avoid repeated questions. We also encourage that people quickly look over past threads in our mailing list, to become familiar with how questions are asked, and possibly to contribute to past discussions where new light may be useful. However, we strongly encourage that old discussions are not opened up unless the person really knows what they're talking about.

There is no formal procedure for becoming a project member (getting commit access). The length of time before a newcomer is added to the project, usually depends their interaction with the mailing list. If the user looks to have a good understanding of the code, and we agree with their goals, then we may give commit access sooner. When our project grows larger, we may review patches initially and give commit access later.

  * Read the coding syntax guide on the [TheBible#4._Implementation Implementation] page.
  * The [DeveloperFAQ Developer FAQ] may be useful.

= Procedures =

== Issues ==

See the [Issues] page.

== Voting ==

Even though our community is at present, a benevolent dictatorship, it may still be appropriate to vote. Voting should be done by means of the classic open source voting method; mailing list voting.

First, the vote subject is posted in a new thread, then, each user replies with either +1 or -1 depending on if they agree or veto respectively. Veto votes are usually accompanied by an explanation. Discussion may also occur. Once a decision seems to have been reached, the votes will be tallied, and a conclusion will be reached.