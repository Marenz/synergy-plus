#summary Specification: Implementation
#labels Specification

= Synergy+ Specification =

[SpecToc Table of Contents]

== Implementation ==

=== Code style ===

The code style is based on the original style used by Chris Schoeneman. This original style will be followed for constancy, which will make it easier for the community to worth with.

  * The const keyword is used
  * Class, struct, and enum names are PascalCase
  * Member, and enum constant names are camelCase
  * Member variables (public and private) begin with m_
  * Comments are lower case, don't need to be grammatically correct
  * Multiline comments use single-line commenting (//)
  * Each function modifier is located on a separate line before the function name
  * For functions, curly braces start on the next line after the function name
  * For commands, curly braces start on the same line as the operator
  * A space is left between parenthesis and operators
  * No space is inserted after or before a parenthesis
  * The void keyword is not used for functions that do not take parameters
  * Enum constants are [maybe] prefixed with k
  * Static variables are prefixed with s_

=== Example code style ===

{{{
static Example s_exampleStatic = NULL;
 
static
void
updateStatus()
{
  // ...
}
 
int
ExampleClass::exampleFunction(int a, int b)
{
  if (helloWorld) {
    // do something
  }
}
 
enum ExampleEnum {
  kConstant1,
  kConstant2
};
}}}